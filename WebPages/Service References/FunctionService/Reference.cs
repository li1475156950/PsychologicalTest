//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPages.FunctionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionEntity", Namespace="http://schemas.datacontract.org/2004/07/BasicsServiceMODEL.BasicSettingModel")]
    [System.SerializableAttribute()]
    public partial class FunctionEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Class {
            get {
                return this.Fun_ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_ClassField, value) != true)) {
                    this.Fun_ClassField = value;
                    this.RaisePropertyChanged("Fun_Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_ID {
            get {
                return this.Fun_IDField;
            }
            set {
                if ((this.Fun_IDField.Equals(value) != true)) {
                    this.Fun_IDField = value;
                    this.RaisePropertyChanged("Fun_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Name {
            get {
                return this.Fun_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_NameField, value) != true)) {
                    this.Fun_NameField = value;
                    this.RaisePropertyChanged("Fun_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_ParentID {
            get {
                return this.Fun_ParentIDField;
            }
            set {
                if ((this.Fun_ParentIDField.Equals(value) != true)) {
                    this.Fun_ParentIDField = value;
                    this.RaisePropertyChanged("Fun_ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_Type {
            get {
                return this.Fun_TypeField;
            }
            set {
                if ((this.Fun_TypeField.Equals(value) != true)) {
                    this.Fun_TypeField = value;
                    this.RaisePropertyChanged("Fun_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Url {
            get {
                return this.Fun_UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_UrlField, value) != true)) {
                    this.Fun_UrlField = value;
                    this.RaisePropertyChanged("Fun_Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RF_Entity", Namespace="http://schemas.datacontract.org/2004/07/BasicsServiceBLL.BasicSettingBLL")]
    [System.SerializableAttribute()]
    public partial class RF_Entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Btn_ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Btn_MarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Fun_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Fun_UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Btn_Content {
            get {
                return this.Btn_ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.Btn_ContentField, value) != true)) {
                    this.Btn_ContentField = value;
                    this.RaisePropertyChanged("Btn_Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Btn_Mark {
            get {
                return this.Btn_MarkField;
            }
            set {
                if ((this.Btn_MarkField.Equals(value) != true)) {
                    this.Btn_MarkField = value;
                    this.RaisePropertyChanged("Btn_Mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Class {
            get {
                return this.Fun_ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_ClassField, value) != true)) {
                    this.Fun_ClassField = value;
                    this.RaisePropertyChanged("Fun_Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_ID {
            get {
                return this.Fun_IDField;
            }
            set {
                if ((this.Fun_IDField.Equals(value) != true)) {
                    this.Fun_IDField = value;
                    this.RaisePropertyChanged("Fun_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Name {
            get {
                return this.Fun_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_NameField, value) != true)) {
                    this.Fun_NameField = value;
                    this.RaisePropertyChanged("Fun_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_ParentID {
            get {
                return this.Fun_ParentIDField;
            }
            set {
                if ((this.Fun_ParentIDField.Equals(value) != true)) {
                    this.Fun_ParentIDField = value;
                    this.RaisePropertyChanged("Fun_ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Fun_Type {
            get {
                return this.Fun_TypeField;
            }
            set {
                if ((this.Fun_TypeField.Equals(value) != true)) {
                    this.Fun_TypeField = value;
                    this.RaisePropertyChanged("Fun_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fun_Url {
            get {
                return this.Fun_UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.Fun_UrlField, value) != true)) {
                    this.Fun_UrlField = value;
                    this.RaisePropertyChanged("Fun_Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleEntity", Namespace="http://schemas.datacontract.org/2004/07/BasicsServiceMODEL.BasicSettingModel")]
    [System.SerializableAttribute()]
    public partial class RoleEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Role_CreatePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Role_CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Role_DescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Role_EditPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Role_EditTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Role_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Role_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Role_TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role_CreatePerson {
            get {
                return this.Role_CreatePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_CreatePersonField, value) != true)) {
                    this.Role_CreatePersonField = value;
                    this.RaisePropertyChanged("Role_CreatePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Role_CreateTime {
            get {
                return this.Role_CreateTimeField;
            }
            set {
                if ((this.Role_CreateTimeField.Equals(value) != true)) {
                    this.Role_CreateTimeField = value;
                    this.RaisePropertyChanged("Role_CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role_Describe {
            get {
                return this.Role_DescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_DescribeField, value) != true)) {
                    this.Role_DescribeField = value;
                    this.RaisePropertyChanged("Role_Describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role_EditPerson {
            get {
                return this.Role_EditPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_EditPersonField, value) != true)) {
                    this.Role_EditPersonField = value;
                    this.RaisePropertyChanged("Role_EditPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Role_EditTime {
            get {
                return this.Role_EditTimeField;
            }
            set {
                if ((this.Role_EditTimeField.Equals(value) != true)) {
                    this.Role_EditTimeField = value;
                    this.RaisePropertyChanged("Role_EditTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role_ID {
            get {
                return this.Role_IDField;
            }
            set {
                if ((this.Role_IDField.Equals(value) != true)) {
                    this.Role_IDField = value;
                    this.RaisePropertyChanged("Role_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role_Name {
            get {
                return this.Role_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Role_NameField, value) != true)) {
                    this.Role_NameField = value;
                    this.RaisePropertyChanged("Role_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role_Type {
            get {
                return this.Role_TypeField;
            }
            set {
                if ((this.Role_TypeField.Equals(value) != true)) {
                    this.Role_TypeField = value;
                    this.RaisePropertyChanged("Role_Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FunctionService.IFunctionService")]
    public interface IFunctionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetAllFun", ReplyAction="http://tempuri.org/IFunctionService/GetAllFunResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetAllFun();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetRoleFun", ReplyAction="http://tempuri.org/IFunctionService/GetRoleFunResponse")]
        System.Collections.Generic.List<int> GetRoleFun(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/AddRoleFun", ReplyAction="http://tempuri.org/IFunctionService/AddRoleFunResponse")]
        bool AddRoleFun(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/Delete", ReplyAction="http://tempuri.org/IFunctionService/DeleteResponse")]
        bool Delete(int roleID, int funID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/Deletes", ReplyAction="http://tempuri.org/IFunctionService/DeletesResponse")]
        bool Deletes(System.Collections.Generic.List<int> role, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetFunByFunType", ReplyAction="http://tempuri.org/IFunctionService/GetFunByFunTypeResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetFunByFunType(int funType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetFunByParentID", ReplyAction="http://tempuri.org/IFunctionService/GetFunByParentIDResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetFunByParentID(int parentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetAdminFunByUserID", ReplyAction="http://tempuri.org/IFunctionService/GetAdminFunByUserIDResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetAdminFunByUserID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetParentFunByFunID", ReplyAction="http://tempuri.org/IFunctionService/GetParentFunByFunIDResponse")]
        WebPages.FunctionService.FunctionEntity GetParentFunByFunID(int funID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetEntity", ReplyAction="http://tempuri.org/IFunctionService/GetEntityResponse")]
        WebPages.FunctionService.FunctionEntity GetEntity(int Fun_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetRF_AD", ReplyAction="http://tempuri.org/IFunctionService/GetRF_ADResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.RF_Entity> GetRF_AD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetRoleAndFunctionByRoleID", ReplyAction="http://tempuri.org/IFunctionService/GetRoleAndFunctionByRoleIDResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.RF_Entity> GetRoleAndFunctionByRoleID(int RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/SelectRoleName", ReplyAction="http://tempuri.org/IFunctionService/SelectRoleNameResponse")]
        System.Collections.Generic.List<WebPages.FunctionService.RoleEntity> SelectRoleName(string role_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionService/GetFunByFID", ReplyAction="http://tempuri.org/IFunctionService/GetFunByFIDResponse")]
        System.Data.DataTable GetFunByFID();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFunctionServiceChannel : WebPages.FunctionService.IFunctionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunctionServiceClient : System.ServiceModel.ClientBase<WebPages.FunctionService.IFunctionService>, WebPages.FunctionService.IFunctionService {
        
        public FunctionServiceClient() {
        }
        
        public FunctionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FunctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetAllFun() {
            return base.Channel.GetAllFun();
        }
        
        public System.Collections.Generic.List<int> GetRoleFun(int roleID) {
            return base.Channel.GetRoleFun(roleID);
        }
        
        public bool AddRoleFun(System.Data.DataTable dt) {
            return base.Channel.AddRoleFun(dt);
        }
        
        public bool Delete(int roleID, int funID) {
            return base.Channel.Delete(roleID, funID);
        }
        
        public bool Deletes(System.Collections.Generic.List<int> role, int roleID) {
            return base.Channel.Deletes(role, roleID);
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetFunByFunType(int funType) {
            return base.Channel.GetFunByFunType(funType);
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetFunByParentID(int parentID) {
            return base.Channel.GetFunByParentID(parentID);
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.FunctionEntity> GetAdminFunByUserID(int userID) {
            return base.Channel.GetAdminFunByUserID(userID);
        }
        
        public WebPages.FunctionService.FunctionEntity GetParentFunByFunID(int funID) {
            return base.Channel.GetParentFunByFunID(funID);
        }
        
        public WebPages.FunctionService.FunctionEntity GetEntity(int Fun_ID) {
            return base.Channel.GetEntity(Fun_ID);
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.RF_Entity> GetRF_AD() {
            return base.Channel.GetRF_AD();
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.RF_Entity> GetRoleAndFunctionByRoleID(int RoleID) {
            return base.Channel.GetRoleAndFunctionByRoleID(RoleID);
        }
        
        public System.Collections.Generic.List<WebPages.FunctionService.RoleEntity> SelectRoleName(string role_type) {
            return base.Channel.SelectRoleName(role_type);
        }
        
        public System.Data.DataTable GetFunByFID() {
            return base.Channel.GetFunByFID();
        }
    }
}
