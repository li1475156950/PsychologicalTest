//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPages.QuestionTypeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionType", Namespace="http://schemas.datacontract.org/2004/07/BasicsServiceMODEL.QuestionTypeModel")]
    [System.SerializableAttribute()]
    public partial class QuestionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QTCreatePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QTNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Describe {
            get {
                return this.DescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescribeField, value) != true)) {
                    this.DescribeField = value;
                    this.RaisePropertyChanged("Describe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseCode {
            get {
                return this.EnterpriseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseCodeField, value) != true)) {
                    this.EnterpriseCodeField = value;
                    this.RaisePropertyChanged("EnterpriseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QTCreatePerson {
            get {
                return this.QTCreatePersonField;
            }
            set {
                if ((this.QTCreatePersonField.Equals(value) != true)) {
                    this.QTCreatePersonField = value;
                    this.RaisePropertyChanged("QTCreatePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QTID {
            get {
                return this.QTIDField;
            }
            set {
                if ((this.QTIDField.Equals(value) != true)) {
                    this.QTIDField = value;
                    this.RaisePropertyChanged("QTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QTName {
            get {
                return this.QTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QTNameField, value) != true)) {
                    this.QTNameField = value;
                    this.RaisePropertyChanged("QTName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuestionTypeService.IQuestionTypeService")]
    public interface IQuestionTypeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/GetQuestionTypes", ReplyAction="http://tempuri.org/IQuestionTypeService/GetQuestionTypesResponse")]
        System.Data.DataSet GetQuestionTypes(int uId, string enterpriseCode, int starRowIndex, int endRowIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/GetQuestionInfo", ReplyAction="http://tempuri.org/IQuestionTypeService/GetQuestionInfoResponse")]
        WebPages.QuestionTypeService.QuestionType GetQuestionInfo(int questionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/GetQuestionType", ReplyAction="http://tempuri.org/IQuestionTypeService/GetQuestionTypeResponse")]
        System.Data.DataTable GetQuestionType(string enterpriseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/AddQuestionType", ReplyAction="http://tempuri.org/IQuestionTypeService/AddQuestionTypeResponse")]
        int AddQuestionType(WebPages.QuestionTypeService.QuestionType questionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/EditQuestionType", ReplyAction="http://tempuri.org/IQuestionTypeService/EditQuestionTypeResponse")]
        int EditQuestionType(WebPages.QuestionTypeService.QuestionType questionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/DeleteQuestionType", ReplyAction="http://tempuri.org/IQuestionTypeService/DeleteQuestionTypeResponse")]
        int DeleteQuestionType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionTypeService/CheckNameIsRepeat", ReplyAction="http://tempuri.org/IQuestionTypeService/CheckNameIsRepeatResponse")]
        bool CheckNameIsRepeat(int identity, string name, string nterpriseCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionTypeServiceChannel : WebPages.QuestionTypeService.IQuestionTypeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionTypeServiceClient : System.ServiceModel.ClientBase<WebPages.QuestionTypeService.IQuestionTypeService>, WebPages.QuestionTypeService.IQuestionTypeService {
        
        public QuestionTypeServiceClient() {
        }
        
        public QuestionTypeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetQuestionTypes(int uId, string enterpriseCode, int starRowIndex, int endRowIndex) {
            return base.Channel.GetQuestionTypes(uId, enterpriseCode, starRowIndex, endRowIndex);
        }
        
        public WebPages.QuestionTypeService.QuestionType GetQuestionInfo(int questionTypeId) {
            return base.Channel.GetQuestionInfo(questionTypeId);
        }
        
        public System.Data.DataTable GetQuestionType(string enterpriseCode) {
            return base.Channel.GetQuestionType(enterpriseCode);
        }
        
        public int AddQuestionType(WebPages.QuestionTypeService.QuestionType questionType) {
            return base.Channel.AddQuestionType(questionType);
        }
        
        public int EditQuestionType(WebPages.QuestionTypeService.QuestionType questionType) {
            return base.Channel.EditQuestionType(questionType);
        }
        
        public int DeleteQuestionType(int id) {
            return base.Channel.DeleteQuestionType(id);
        }
        
        public bool CheckNameIsRepeat(int identity, string name, string nterpriseCode) {
            return base.Channel.CheckNameIsRepeat(identity, name, nterpriseCode);
        }
    }
}
